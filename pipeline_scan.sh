#!/bin/bash
# Pipeline de Scan de Vulnerabilidades Otimizado

URLS_FILE=$1
if [[ -z "$URLS_FILE" ]]; then
    echo "Uso: $0 <arquivo_urls>"
    exit 1
fi

echo "üîç Pipeline de Scan para: $URLS_FILE"
echo "=================================="

# Verificar se o arquivo existe
if [[ ! -f "$URLS_FILE" ]]; then
    echo "‚ùå Arquivo $URLS_FILE n√£o encontrado!"
    exit 1
fi

# Usar wordlists locais
WORDLIST_DIR="./wordlists"
COMMON_WORDLIST="$WORDLIST_DIR/common.txt"
EXTENSIONS_WORDLIST="$WORDLIST_DIR/extensions.txt"

# Verificar se as wordlists existem
if [[ ! -f "$COMMON_WORDLIST" ]]; then
    echo "‚ùå Wordlist $COMMON_WORDLIST n√£o encontrada!"
    exit 1
fi

echo "üìã Usando wordlists locais:"
echo "   - Diret√≥rios: $COMMON_WORDLIST"
echo "   - Extens√µes: $EXTENSIONS_WORDLIST"

# Limpar arquivos anteriores
> vulnerabilities.txt
> fuzzing_results.txt

# Contador de URLs processadas
TOTAL_URLS=$(wc -l < "$URLS_FILE")
CURRENT=0

echo "üöÄ Iniciando fuzzing em $TOTAL_URLS URLs..."

while IFS= read -r url; do
    CURRENT=$((CURRENT + 1))
    echo "üì° [$CURRENT/$TOTAL_URLS] Fuzzing: $url"
    
    # Fuzzing de diret√≥rios
    echo "   üîç Testando diret√≥rios..."
    ffuf -w "$COMMON_WORDLIST" -u "$url/FUZZ" -mc 200,301,302,403 -s -o "fuzz_dirs_$CURRENT.json" -of json 2>/dev/null
    
    # Fuzzing de extens√µes
    echo "   üìÑ Testando extens√µes..."
    ffuf -w "$EXTENSIONS_WORDLIST" -u "$url/FUZZ" -mc 200,301,302,403 -s -o "fuzz_ext_$CURRENT.json" -of json 2>/dev/null
    
    # Verificar se encontrou algo
    if [[ -f "fuzz_dirs_$CURRENT.json" ]] && [[ -s "fuzz_dirs_$CURRENT.json" ]]; then
        echo "   ‚úÖ Encontrados diret√≥rios em $url"
        cat "fuzz_dirs_$CURRENT.json" >> fuzzing_results.txt
    fi
    
    if [[ -f "fuzz_ext_$CURRENT.json" ]] && [[ -s "fuzz_ext_$CURRENT.json" ]]; then
        echo "   ‚úÖ Encontrados arquivos em $url"
        cat "fuzz_ext_$CURRENT.json" >> fuzzing_results.txt
    fi
    
    # Limpar arquivos tempor√°rios
    rm -f "fuzz_dirs_$CURRENT.json" "fuzz_ext_$CURRENT.json"
    
    # Delay para n√£o sobrecarregar
    sleep 1
    
done < "$URLS_FILE"

echo "‚úÖ Scan conclu√≠do!"
echo "üìä Resultados salvos em: vulnerabilities.txt e fuzzing_results.txt"
